/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectofinal_auto;


import jafd.exceptions.MachineException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.Set;
import java.util.StringTokenizer;
import java.util.Vector;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;


/**
 *
 * @author Vaio
 */
public class JFprincipal extends javax.swing.JFrame {
    
    Metodos x=new Metodos();
    ArrayList<String> guardar = new ArrayList<String>();
    ArrayList<String> guardar2 = new ArrayList<String>();
    ArrayList<String> mayusculas= new ArrayList<String>();
     ArrayList<String>minusculas=new ArrayList<String>();
    StringBuffer cadena = new StringBuffer();
    
       private final JAfdController jAfdController; 
    /**
     * Creates new form JFprincipal
     */
    public JFprincipal() {
        initComponents(); 
         this.jAfdController = JAfdController.getInstance();
        initComponents();
        setLocationRelativeTo(null);  
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtreglas = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtpalabras = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        area1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        area2 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        alfabeto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        area3 = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        comprobar = new javax.swing.JButton();
        palabras = new javax.swing.JTextField();
        resultado = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Reglas:");

        jLabel2.setText("Palabras:");

        area1.setColumns(20);
        area1.setRows(5);
        jScrollPane1.setViewportView(area1);

        area2.setColumns(20);
        area2.setRows(5);
        jScrollPane2.setViewportView(area2);

        jButton1.setText("VALIDAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Alfabeto: ");

        area3.setColumns(20);
        area3.setRows(5);
        jScrollPane3.setViewportView(area3);

        jLabel4.setText("Estados");

        comprobar.setText("COMPROBAR CADENA");
        comprobar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comprobarActionPerformed(evt);
            }
        });

        jMenu1.setText("Archvio");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem1.setText("Abrir Reglas");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Abrir Palabras");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Salir");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Editar");

        jMenuItem4.setText("Editar Reglas");
        jMenu2.add(jMenuItem4);

        jMenuItem5.setText("Editar Palabras");
        jMenu2.add(jMenuItem5);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(85, 85, 85))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                    .addComponent(txtreglas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comprobar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtpalabras)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(121, 121, 121))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(alfabeto)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(palabras, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                            .addComponent(resultado))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtpalabras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtreglas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                        .addGap(70, 70, 70))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comprobar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(alfabeto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(palabras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(resultado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        JFileChooser nuevo=new JFileChooser();
        int opcion=nuevo.showOpenDialog(this);
        if (opcion==JFileChooser.APPROVE_OPTION)
        {
            txtreglas.setText(nuevo.getSelectedFile().getPath());
        }  
           
        
        Metodos x=new Metodos();
        x.leer(txtreglas.getText());
        
         for (int i = 0; i < x.lineas.size(); i++){ 
                        
             area1.append(x.lineas.get(i)); 
                area1.append(System.getProperty("line.separator"));
          
              } 
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
       JFileChooser nuevo=new JFileChooser();
        int opcion=nuevo.showOpenDialog(this);
        if (opcion==JFileChooser.APPROVE_OPTION)
        {
            txtpalabras.setText(nuevo.getSelectedFile().getPath());
        } 
        x.leer2(txtpalabras.getText());
         for (int i = 0; i < x.lineas2.size(); i++){
             area2.append(x.lineas2.get(i)); 
                area2.append(System.getProperty("line.separator"));
              }
        
        
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed

      
  
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
       
      ///Guardar en arraylist lo leeido en el txt reglas y convertirlos en tokens
        for(int w=0;w<Metodos.lineas.size();w++)
        {
        StringTokenizer tokens = new StringTokenizer(Metodos.lineas.get(w));
        while(tokens.hasMoreTokens()){
              
             guardar.add(tokens.nextToken());
         }  
        }
      ///Guardar en arraylist lo leeido en el txt cadenas y convertirlos en tokens  
          for(int l=0;l<Metodos.lineas2.size();l++)
        {
        StringTokenizer tokens = new StringTokenizer(Metodos.lineas2.get(l));
        while(tokens.hasMoreTokens()){  
             guardar2.add(tokens.nextToken());        
         }  
        }
          ///eliminar valores repetidos
          HashSet<String> hs = new HashSet<String>();
          hs.addAll(guardar);
          guardar.clear();
          guardar.addAll(hs);
            ///////////////////////////
          //leer mayusculas y minusculas

          for(int v=0;v<guardar.size();v++)
          {
            String cadena=guardar.get(v);
              
               for(int j=0;j<cadena.length();j++)
        {
           
            if(Integer.valueOf(cadena.charAt(j))>64 && Integer.valueOf(cadena.charAt(j))<91 )
            {
                mayusculas.add(String.valueOf(cadena.charAt(j)));
            }else
            {
                if(Integer.valueOf(cadena.charAt(j))>96 && Integer.valueOf(cadena.charAt(j))<123 )
            {
                minusculas.add(String.valueOf(cadena.charAt(j)));
            }
            }
        }
              
          } 
          ////////////////////////////////////////////
          //enviar el alfabeto
          Collections.sort(mayusculas);
          for (int i = 0; i < mayusculas.size(); i++){ 
                        
             area3.append("Q"+i+"="+mayusculas.get(i)); 
             area3.append(System.getProperty("line.separator"));
          
              } 
          
          
          
          Collections.sort(minusculas);
          
          for (int x=0;x<minusculas.size();x++){
            cadena =cadena.append(minusculas.get(x)+",");
            }
          alfabeto.setText(cadena.toString());
          
               
           if (JOptionPane.showConfirmDialog(this, "Se va a generar un nuevo AFD. ¿Desea continuar?", null, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            try {            
                this.jAfdController.newDFA();
                this.enterAlphabet(alfabeto.getText());
                this.enterStates();
                this.enterFinalStates();
                this.enterTransitions();
            } catch(Exception e) {
                JOptionPane.showMessageDialog(this, "No se pudo crear correctamente el AFD", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }        
             

    }//GEN-LAST:event_jButton1ActionPerformed

    private void comprobarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comprobarActionPerformed
      for (int g=0;g<x.lineas2.size();g++){
             palabras.setText(x.lineas2.get(g));
             this.resolve();
             JOptionPane.showMessageDialog(null,"Palabra: "+x.lineas2.get(g)+" "+resultado.getText());    
            }
    }//GEN-LAST:event_comprobarActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed

   if (JOptionPane.showConfirmDialog(this, "¿Desea salir de la aplicación?", null, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            System.exit(0);
        }         


// TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed


    
    private void enterAlphabet(String a) throws Exception {
        
        
      
        String[] symbols = alfabeto.getText().split(",");
        
        if (symbols.length > 1) {
            try {
                JAfdController.getInstance().enterAlphabet(symbols);
            } catch (MachineException ex) {
                JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }            
       System.out.println(alfabeto);
    }
        
        
        //NewAlphabetDialog dialog = new NewAlphabetDialog(this, true);
        
        //this.texto.setText(jAfdController.getAlphabet());
    }
    
    private void enterStates() {
        
        String gh =String.valueOf(mayusculas.size());
        String numberOfStatesString =gh ;
        
        try {
            if (numberOfStatesString == null || numberOfStatesString.isEmpty()) {
                throw new MachineException("Debe ingresar un número entero");
            }
            
            int numberOfStates = Integer.parseInt(gh);
            JAfdController.getInstance().enterStates(numberOfStates);
        } catch(MachineException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);                   
           
    }
        
        System.out.println(numberOfStatesString);
        
    }
    
    private void enterFinalStates() throws Exception {
      
        String gh =String.valueOf(mayusculas.size()-1);
        String numberOfStatesString =gh ;
        try {
            String finalStates = gh;
            
            if (finalStates == null || finalStates.isEmpty()) {
                throw new MachineException("Invalid text.");
            }
            
            JAfdController.getInstance().enterFinalStates(finalStates.split(","));           
        } catch(MachineException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    
         System.out.println(gh);
    }
    
    private void enterTransitions() {
        JOptionPane.showMessageDialog(this, "Se iniciará la carga de la tabla de transiciones", "", JOptionPane.INFORMATION_MESSAGE);
        
        for (int currentState = 0; currentState < jAfdController.getNumberOfStates(); currentState++) {
            for (Object symbol: jAfdController.getSymbols()) {
                JDtransiciones dialog = new JDtransiciones(this, true, currentState, symbol.toString());
            }            
        }
    }
    
    private void resolve() {
        
        
        
        
        
        //this.resultado.setText(null);
        try {    
            JAfdController resp=new JAfdController();
             
            this.resultado.setText(jAfdController.simulate(palabras.getText()));
        } catch (MachineException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "No se pudo evaluar ninguna cadena. No se detectó ningún AFD", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFprincipal().setVisible(true);
            }
        });
    }
    

     

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alfabeto;
    public static javax.swing.JTextArea area1;
    public static javax.swing.JTextArea area2;
    public static javax.swing.JTextArea area3;
    private javax.swing.JButton comprobar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JTextField palabras;
    public static javax.swing.JTextField resultado;
    public static javax.swing.JTextField txtpalabras;
    public static javax.swing.JTextField txtreglas;
    // End of variables declaration//GEN-END:variables
}
